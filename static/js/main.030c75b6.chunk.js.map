{"version":3,"sources":["Components/Clock.js","Components/ClickCounter.js","Components/Player.js","Components/Products.js","Components/Spotify.js","App.js","serviceWorker.js","index.js"],"names":["Clock","props","state","time","Date","toLocaleString","this","intervalID","setInterval","updateClock","clearInterval","setState","style","width","height","justifyContent","alignItems","display","letterSpacing","React","Component","ClickCounter","handleClick","bind","count","counter","console","log","margin","fontSize","background","color","borderRadius","borderWidth","animation","position","top","right","transform","cursor","textTransform","fontWeight","type","onClick","Player","className","src","controls","Products","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6OA6CeA,E,YA1Cb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,MAAM,IAAIC,MAAOC,kBAHF,E,iFAOE,IAAD,OAClBC,KAAKC,WAAaC,aAChB,kBAAM,EAAKC,gBACX,O,6CAIFC,cAAcJ,KAAKC,c,oCAGnBD,KAAKK,SAAS,CACZR,MAAM,IAAIC,MAAOC,qB,+BAcnB,OACE,yBAAKO,MAXS,CACdC,MAAO,OACPC,OAAQ,MACRC,eAAgB,eAChBC,WAAY,SACZC,QAAS,SAOP,uBAAGL,MALa,CAClBM,cAAe,QAIb,eACeZ,KAAKJ,MAAMC,W,GApCdgB,IAAMC,W,OCwDXC,E,YAvDb,WAAYpB,GAAQ,IAAD,8BACjB,4CAAMA,KACDqB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,MAAQ,EACb,EAAKtB,MAAQ,CACXuB,QAAS,EAAKD,OALC,E,2EASjBlB,KAAKK,SAAS,CACZc,QAASnB,KAAKkB,OAAO,IAEvBE,QAAQC,IAAI,a,+BA8BZ,OACE,6BACE,4BAAQf,MA7BS,CACnBC,MAAO,OACPC,OAAQ,OACRc,OAAQ,OACRC,SAAU,OACVC,WAAY,OACZC,MAAO,QACPC,aAAc,MACdC,YAAa,MACbC,UAAW,wBAqBN5B,KAAKJ,MAAMuB,SAEd,4BAAQb,MArBQ,CAClBC,MAAO,QACPC,OAAQ,OACRqB,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,UAAW,sBACXR,WAAY,OACZS,OAAQ,UACRN,YAAa,MACbC,UAAW,sBACXH,MAAO,QACPb,cAAe,MACfsB,cAAe,YACfC,WAAY,QAQVC,KAAK,SAASC,QAASrC,KAAKgB,aAD5B,kB,GAhDmBH,IAAMC,WC+BlBwB,E,iLAfX,OACE,yBAAKhC,MAPa,CAClBE,OAAQ,QACRG,QAAS,OACTF,eAAgB,eAChBC,WAAY,UAGa6B,UAAU,eACjC,4BACEjC,MAjBQ,CACZC,MAAM,QACNC,OAAO,SAgBHgC,IAAI,8CAEN,2BACElC,MAjBY,CAChBC,MAAM,QACNC,OAAO,SAgBHgC,IAAI,oBAAoBC,UAAQ,S,GAxBrB5B,IAAMC,WCmBZ4B,E,iLARX,OACE,6BACE,kC,GAJe7B,IAAMC,WCTPD,IAAMC,UCuBb6B,MAjBf,WACE,OACE,yBAAKJ,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,OAEF,0BAAMA,UAAU,YACd,kBAAC,EAAD,OAEF,4BAAQA,UAAU,cAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,SCPYK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.030c75b6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: new Date().toLocaleString()\r\n    };\r\n    //this.updateClock = this.updateClock.bind(this)\r\n  }\r\n  componentDidMount() {\r\n    this.intervalID = setInterval (\r\n      () => this.updateClock(),\r\n      1000\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n  updateClock() {\r\n    this.setState({\r\n      time: new Date().toLocaleString()\r\n    });\r\n  }\r\n  render() {\r\n    const myStyle = {\r\n      width: \"100%\",\r\n      height: \"4vh\",\r\n      justifyContent: \"space-around\",\r\n      alignItems: \"center\",\r\n      display: \"flex\",\r\n      }\r\n    const objectStyle = {\r\n      letterSpacing: \"1px\",\r\n    }\r\n    return (\r\n      <div style={myStyle}>\r\n        <p style={objectStyle}>\r\n          The Date is {this.state.time}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react';\r\n\r\nclass ClickCounter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.count = 0;\r\n    this.state = {\r\n      counter: this.count\r\n    }\r\n  }\r\n  handleClick() {\r\n    this.setState({\r\n      counter: this.count+=1\r\n    })\r\n    console.log('Clicked');\r\n  }\r\n  render() {\r\n    const counterStyle = {\r\n      width: \"40vh\",\r\n      height: \"40vh\",\r\n      margin: \"10px\",\r\n      fontSize: \"50px\",\r\n      background: \"none\",\r\n      color: \"white\",\r\n      borderRadius: \"10%\",\r\n      borderWidth: \"2px\",\r\n      animation: \"random 10s infinite\",\r\n    }\r\n    const buttonStyle = {\r\n      width: \"300px\",\r\n      height: \"40px\",\r\n      position: \"absolute\",\r\n      top: \"60%\",\r\n      right: \"50%\",\r\n      transform: \"translate(50%,-50%)\",\r\n      background: \"none\",\r\n      cursor: \"pointer\",\r\n      borderWidth: \"2px\",\r\n      animation: \"random 10s infinite\",\r\n      color: \"white\",\r\n      letterSpacing: \"5px\",\r\n      textTransform: \"uppercase\",\r\n      fontWeight: \"bold\",\r\n    }\r\n    return (\r\n      <div>\r\n        <button style={counterStyle}>\r\n          {this.state.counter}\r\n        </button>\r\n        <button style={buttonStyle}\r\n        type=\"submit\" onClick={this.handleClick}>Click me!\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClickCounter;\r\n","import React from 'react';\r\n\r\nclass Player extends React.Component {\r\n  render() {\r\n    const style = {\r\n      width:\"600px\",\r\n      height:\"300px\",\r\n    }\r\n    const styleThis = {\r\n      width:\"600px\",\r\n      height:\"300px\",\r\n    }\r\n    const displayFlex = {\r\n      height: \"100vh\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-around\",\r\n      alignItems: \"center\",\r\n    }\r\n    return (\r\n      <div style={displayFlex} className=\"flex-player\">\r\n        <iframe\r\n          style={style}\r\n          src=\"https://www.youtube.com/embed/tgbNymZ7vqY\">\r\n        </iframe>\r\n        <video\r\n          style={styleThis}\r\n          src=\"./Video/video.mp4\" controls>\r\n        </video>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import React from 'react';\r\n\r\nvar PRODUCTS = {\r\n  '1': {id: 1, category: 'Musical Instruments', price: '$459.99', stocked: true, name: 'Clarinet'},\r\n  '2': {id: 2, category: 'Musical Instruments', price: '$5,000', stocked: true, name: 'Harpsicord'},\r\n  '3': {id: 3, category: 'Musical Instruments', price: '$11,000', stocked: false, name: 'Fortepiano'},\r\n  '4': {id: 4, category: 'Furniture', price: '$799', stocked: true, name: 'Chaise Lounge'},\r\n  '5': {id: 5, category: 'Furniture', price: '$1,300', stocked: false, name: 'Dining Table'},\r\n  '6': {id: 6, category: 'Furniture', price: '$100', stocked: true, name: 'Bean Bag'}\r\n};\r\n\r\nclass Products extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1></h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Products;\r\n","import React from 'react';\r\n\r\nclass Spotify extends React.Component {\r\n  render() {\r\n    return \r\n  }\r\n}\r\n\r\nexport default Spotify;\r\n","import React from 'react';\nimport './App.css';\nimport Clock from './Components/Clock.js';\nimport ClickCounter from './Components/ClickCounter.js';\nimport Player from './Components/Player.js';\nimport Products from './Components/Products.js';\nimport Spotify from './Components/Spotify.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Clock />\n      </header>\n      <main className=\"App-main\">\n        <ClickCounter />\n      </main>\n      <footer className=\"App-footer\">\n        <Player />\n        <Products />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}